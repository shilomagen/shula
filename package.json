{
  "name": "@shula/source",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "// === üöÄ DEVELOPMENT COMMANDS === ": "",
    "dev": "npm run dev:infra && npm run dev:all",
    "dev:all": "npm-run-all --parallel dev:backend dev:whatsapp",
    "dev:backend": "npm run build:shared && npm run build:nest-logger && npm run dev:backend:serve",
    "dev:backend:serve": "NODE_ENV=development nx serve backend --configuration=development",
    "dev:backend:start": "NODE_ENV=development node dist/apps/backend/main.js",
    "dev:backend:build-watch": "NODE_ENV=development nx build backend --configuration=development --watch",
    "dev:backend:full": "npm run build:shared && npm run build:nest-logger && npm run build:backend && npm-run-all --parallel dev:backend:build-watch dev:backend:start",
    "dev:whatsapp": "nx serve whatsapp-container",
    "// === üèóÔ∏è INFRASTRUCTURE COMMANDS === ": "",
    "dev:infra": "docker compose -f docker-compose.dev.yml up -d",
    "dev:infra:logs": "docker compose -f docker-compose.dev.yml logs -f",
    "dev:infra:down": "docker compose -f docker-compose.dev.yml down",
    "dev:infra:restart": "npm run dev:infra:down && npm run dev:infra",
    "// === üß™ TESTING COMMANDS === ": "",
    "test": "nx run-many --target=test --all",
    "test:watch": "nx run-many --target=test --all --watch",
    "test:e2e": "nx run-many --target=test:e2e --all",
    "test:e2e:backend": "cd apps/backend && ./scripts/run-e2e-tests.sh",
    "test:e2e:backend:down": "cd apps/backend && ./scripts/run-e2e-tests-down.sh",
    "test:infra": "docker compose -f docker-compose.test.yml up -d",
    "test:infra:down": "docker compose -f docker-compose.test.yml down",
    "// === üè≠ BUILD COMMANDS === ": "",
    "build": "nx run-many --target=build --all",
    "build:backend": "nx build backend --with-deps",
    "build:backend:production": "nx build backend --with-deps --configuration=production",
    "build:whatsapp": "nx build whatsapp-container",
    "build:whatsapp:production": "nx build whatsapp-container --configuration=production",
    "build:shared": "nx build shared-queues",
    "build:nest-logger": "nx build nest-logger",
    "// === üßπ UTILITY COMMANDS === ": "",
    "clean": "nx reset && rm -rf node_modules && rm -rf dist",
    "clean:dist": "rm -rf dist && rm -rf apps/*/dist && rm -rf packages/*/dist",
    "format": "nx format:write",
    "lint": "nx run-many --target=lint --all",
    "lint:fix": "nx run-many --target=lint --all --fix",
    "// === üì¶ DATABASE COMMANDS === ": "",
    "db:migrate": "cd apps/backend && npx prisma migrate dev",
    "db:migrate:prod": "cd apps/backend && npx prisma migrate deploy",
    "db:generate": "cd apps/backend && npx prisma generate",
    "db:studio": "cd apps/backend && npx prisma studio",
    "db:reset": "cd apps/backend && npx prisma migrate reset --force",
    "// === üîÑ MONOREPO COMMANDS === ": "",
    "nx": "nx",
    "graph": "nx graph",
    "affected": "nx affected --target=build",
    "affected:test": "nx affected --target=test",
    "affected:lint": "nx affected --target=lint"
  },
  "private": true,
  "devDependencies": {
    "@eslint/js": "^9.8.0",
    "@faker-js/faker": "^9.5.0",
    "@nestjs/schematics": "^10.0.1",
    "@nestjs/testing": "^10.0.2",
    "@nx/eslint": "20.4.6",
    "@nx/eslint-plugin": "20.4.6",
    "@nx/jest": "20.4.6",
    "@nx/js": "20.4.6",
    "@nx/nest": "^20.4.6",
    "@nx/node": "20.4.6",
    "@nx/web": "20.4.6",
    "@nx/webpack": "^20.4.6",
    "@swc-node/register": "~1.9.1",
    "@swc/cli": "~0.3.12",
    "@swc/core": "~1.5.7",
    "@swc/helpers": "^0.5.15",
    "@swc/jest": "~0.2.36",
    "@types/jest": "^29.5.12",
    "@types/lodash": "^4.17.15",
    "@types/node": "~18.16.9",
    "@types/qrcode-terminal": "^0.12.2",
    "@types/sharp": "^0.31.1",
    "@types/supertest": "^6.0.2",
    "@types/uuid": "^10.0.0",
    "eslint": "^9.8.0",
    "eslint-config-prettier": "^9.0.0",
    "jest": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "jest-mock-extended": "^4.0.0-beta1",
    "lodash": "^4.17.21",
    "npm-run-all": "^4.1.5",
    "nx": "20.4.6",
    "prettier": "^2.6.2",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.6",
    "ts-node": "10.9.1",
    "tslib": "^2.3.0",
    "typescript": "~5.7.2",
    "typescript-eslint": "^8.19.0",
    "verdaccio": "^5.0.4",
    "webpack-cli": "^5.1.4"
  },
  "workspaces": [
    "packages/*",
    "apps/*"
  ],
  "dependencies": {
    "@aws-sdk/client-s3": "^3.758.0",
    "@aws-sdk/s3-request-presigner": "^3.758.0",
    "@grpc/grpc-js": "^1.13.2",
    "@smangam/bullmq": "^11.0.2",
    "@nestjs/schedule": "^5.0.1",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.57.0",
    "@opentelemetry/exporter-metrics-otlp-grpc": "^0.200.0",
    "@opentelemetry/exporter-trace-otlp-grpc": "^0.200.0",
    "@opentelemetry/instrumentation-pino": "^0.47.0",
    "@opentelemetry/resources": "^2.0.0",
    "@opentelemetry/sdk-metrics": "^2.0.0",
    "@opentelemetry/sdk-node": "^0.200.0",
    "@opentelemetry/semantic-conventions": "^1.30.0",
    "@sentry/nestjs": "^9.5.0",
    "@sentry/profiling-node": "^9.5.0",
    "@sentry/webpack-plugin": "^3.2.2",
    "bullmq": "^5.46.1",
    "bullmq-otel": "^1.0.1",
    "change-case": "^4.1.2",
    "cron": "^4.1.0",
    "nestjs-context-logger": "^1.5.4",
    "nestjs-otel": "^6.2.0",
    "nestjs-pino": "^4.4.0",
    "pino": "^8.6.0",
    "pino-http": "^10.4.0",
    "pino-pretty": "^13.0.0",
    "ts-pattern": "^5.6.2",
    "zod": "^3.24.2"
  },
  "nx": {
    "includedScripts": [],
    "targets": {
      "local-registry": {
        "executor": "@nx/js:verdaccio",
        "options": {
          "port": 4873,
          "config": ".verdaccio/config.yml",
          "storage": "tmp/local-registry/storage"
        }
      }
    }
  }
}
