{
  "graph": {
    "nodes": {
      "whatsapp-container": {
        "name": "whatsapp-container",
        "type": "app",
        "data": {
          "root": "apps/whatsapp-container",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "apps/whatsapp-container",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/tsconfig.app.json",
                "{projectRoot}/tsconfig.spec.json",
                "{projectRoot}/src/**/*.ts",
                "{projectRoot}/jest.config.ts",
                "{projectRoot}/src/**/*.test.ts",
                "{projectRoot}/src/**/*.spec.ts",
                "{projectRoot}/src/**/*.d.ts",
                "!{projectRoot}/out-tsc",
                "!{projectRoot}/dist",
                "!{projectRoot}/eslint.config.js",
                "!{projectRoot}/eslint.config.cjs",
                "!{projectRoot}/eslint.config.mjs",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/out-tsc/whatsapp-container",
                "{projectRoot}/out-tsc/jest"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/webpack:webpack",
              "options": {
                "webpackConfig": "apps/whatsapp-container/webpack.config.js",
                "outputPath": "dist/apps/whatsapp-container"
              },
              "defaultConfiguration": "development",
              "configurations": {
                "development": {
                  "watch": true,
                  "optimization": false,
                  "generatePackageJson": true,
                  "extractLicenses": false,
                  "inspect": true
                },
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "inspect": false
                }
              },
              "parallelism": true
            },
            "serve": {
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": [
                "build"
              ],
              "options": {
                "buildTarget": "whatsapp-container:build",
                "runBuildTargetDependencies": false,
                "watch": true,
                "inspect": true
              },
              "configurations": {
                "development": {
                  "buildTarget": "whatsapp-container:build:development"
                },
                "production": {
                  "buildTarget": "whatsapp-container:build:production"
                }
              },
              "parallelism": true
            },
            "preview": {
              "options": {
                "cwd": "apps/whatsapp-container",
                "args": [
                  "--node-env=production"
                ],
                "command": "webpack-cli serve"
              },
              "metadata": {
                "technologies": [
                  "webpack"
                ],
                "description": "Starts Webpack dev server in production mode",
                "help": {
                  "command": "npx webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": [
                        "--client-progress",
                        "--history-api-fallback "
                      ]
                    }
                  }
                }
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "dependsOn": [
                "build"
              ],
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects whatsapp-container --includeDependentProjects -- npx nx build-deps whatsapp-container"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/whatsapp-container",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/jest/coverage"
              ],
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/whatsapp-container",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\"}"
                },
                "command": "jest",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@shula/whatsapp-container",
              "isInPackageManagerWorkspaces": true
            }
          },
          "sourceRoot": "apps/whatsapp-container/src",
          "name": "whatsapp-container",
          "tags": [
            "npm:private"
          ],
          "implicitDependencies": []
        }
      },
      "@shula/shared-queues": {
        "name": "@shula/shared-queues",
        "type": "lib",
        "data": {
          "root": "packages/shared-queues",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "packages/shared-queues",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/tsconfig.lib.json",
                "{projectRoot}/tsconfig.spec.json",
                "{projectRoot}/src/**/*.ts",
                "{projectRoot}/jest.config.ts",
                "{projectRoot}/src/**/*.test.ts",
                "{projectRoot}/src/**/*.spec.ts",
                "{projectRoot}/src/**/*.d.ts",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist",
                "{projectRoot}/out-tsc/jest"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:swc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/shared-queues/dist",
                "main": "packages/shared-queues/src/index.ts",
                "tsConfig": "packages/shared-queues/tsconfig.lib.json",
                "skipTypeCheck": true,
                "stripLeadingPaths": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects @shula/shared-queues --includeDependentProjects -- npx nx build-deps @shula/shared-queues"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/shared-queues",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "packages/shared-queues",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\"}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/jest/coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "sourceRoot": "packages/shared-queues/src",
          "name": "@shula/shared-queues",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@shula/shared-queues",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "require": "./dist/index.js",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@shula/nest-logger": {
        "name": "@shula/nest-logger",
        "type": "lib",
        "data": {
          "root": "packages/nest-logger",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "packages/nest-logger",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/tsconfig.lib.json",
                "{projectRoot}/src/**/*.ts",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:swc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "packages/nest-logger/dist",
                "tsConfig": "packages/nest-logger/tsconfig.lib.json",
                "packageJson": "packages/nest-logger/package.json",
                "main": "packages/nest-logger/src/index.ts",
                "stripLeadingPaths": true
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects @shula/nest-logger --includeDependentProjects -- npx nx build-deps @shula/nest-logger"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/nest-logger",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "sourceRoot": "packages/nest-logger",
          "name": "@shula/nest-logger",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@shula/nest-logger",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "backend": {
        "name": "backend",
        "type": "app",
        "data": {
          "root": "apps/backend",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "apps/backend",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/tsconfig.app.json",
                "{projectRoot}/tsconfig.spec.json",
                "{projectRoot}/src/**/*.ts",
                "{projectRoot}/jest.config.ts",
                "{projectRoot}/src/**/*.test.ts",
                "{projectRoot}/src/**/*.spec.ts",
                "{projectRoot}/src/**/*.d.ts",
                "!{projectRoot}/out-tsc",
                "!{projectRoot}/dist",
                "!{projectRoot}/eslint.config.js",
                "!{projectRoot}/eslint.config.cjs",
                "!{projectRoot}/eslint.config.mjs",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/out-tsc/backend",
                "{projectRoot}/out-tsc/jest"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/webpack:webpack",
              "options": {
                "webpackConfig": "apps/backend/webpack.config.js",
                "outputPath": "dist/apps/backend"
              },
              "defaultConfiguration": "development",
              "configurations": {
                "development": {
                  "watch": true,
                  "optimization": false,
                  "generatePackageJson": true,
                  "extractLicenses": false,
                  "inspect": true
                },
                "production": {
                  "optimization": true,
                  "extractLicenses": true,
                  "generatePackageJson": true,
                  "inspect": false
                }
              },
              "parallelism": true
            },
            "serve": {
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": [
                "build"
              ],
              "options": {
                "buildTarget": "backend:build",
                "runBuildTargetDependencies": false,
                "watch": true,
                "inspect": true
              },
              "configurations": {
                "development": {
                  "buildTarget": "backend:build:development"
                },
                "production": {
                  "buildTarget": "backend:build:production"
                }
              },
              "parallelism": true
            },
            "preview": {
              "options": {
                "cwd": "apps/backend",
                "args": [
                  "--node-env=production"
                ],
                "command": "webpack-cli serve"
              },
              "metadata": {
                "technologies": [
                  "webpack"
                ],
                "description": "Starts Webpack dev server in production mode",
                "help": {
                  "command": "npx webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": [
                        "--client-progress",
                        "--history-api-fallback "
                      ]
                    }
                  }
                }
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "dependsOn": [
                "build"
              ],
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects backend --includeDependentProjects -- npx nx build-deps backend"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/backend",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "npx jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/jest/coverage"
              ],
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/backend",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\"}"
                },
                "command": "jest",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "test:e2e": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:e2e"
              },
              "metadata": {
                "scriptContent": "TS_NODE_PROJECT=./test/tsconfig.e2e.json jest --config ./test/jest-e2e.config.ts --runInBand",
                "runCommand": "npm run test:e2e"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:e2e:dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:e2e:dev"
              },
              "metadata": {
                "scriptContent": "./scripts/run-e2e-tests.sh",
                "runCommand": "npm run test:e2e:dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:e2e:ci": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:e2e:ci"
              },
              "metadata": {
                "scriptContent": "./scripts/run-e2e-tests-ci.sh",
                "runCommand": "npm run test:e2e:ci"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:spec": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:spec"
              },
              "metadata": {
                "scriptContent": "jest --config ./test/jest.config.ts",
                "runCommand": "npm run test:spec"
              },
              "configurations": {},
              "parallelism": true
            },
            "docker-build": {
              "dependsOn": [
                "build"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "docker build -f apps/backend/Dockerfile . -t backend"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "test:e2e",
                "test:e2e:dev",
                "test:e2e:ci",
                "test:spec"
              ]
            },
            "js": {
              "packageName": "@shula/backend",
              "isInPackageManagerWorkspaces": true
            }
          },
          "sourceRoot": "apps/backend/src",
          "name": "backend",
          "tags": [
            "npm:private"
          ],
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "whatsapp-container": [
        {
          "source": "whatsapp-container",
          "target": "@shula/shared-queues",
          "type": "static"
        },
        {
          "source": "whatsapp-container",
          "target": "@shula/nest-logger",
          "type": "static"
        }
      ],
      "@shula/shared-queues": [],
      "@shula/nest-logger": [],
      "backend": [
        {
          "source": "backend",
          "target": "@shula/nest-logger",
          "type": "static"
        },
        {
          "source": "backend",
          "target": "@shula/shared-queues",
          "type": "static"
        }
      ]
    }
  }
}